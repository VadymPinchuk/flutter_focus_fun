{
  "title": "One Codebase, N Experiences",
  "subtitle": "Structuring app to serve mobile, TV ... UIs",
  "slideType": "LEFT_TEXT_RIGHT_CODE",
  "leftBullets": [
    {
      "title": "Single Codebase",
      "description": "Achievable with a clean separation of platform-specific UI."
    },
    {
      "title": "Platform-Aware Widgets",
      "description": "A widget to choose the correct layout for mobile or TV."
    },
    {
      "title": "Conditional Logic",
      "description": "experience.isTV"
    },
    {
      "title": "Clean Separation",
      "description": "Keeps core business logic isolated from UI/UX-specific code."
    },
    {
      "title": "Granular Control",
      "description": "This pattern can be used for individual widgets as well."
    }
  ],
  "codeSamples": [
    {
      "title": "line X: not_in_the_project.dart",
      "code": "UserExperience experience() {\n    if (kIsWeb) return UserExperience.web;\n    return switch (platform) {\n        TargetPlatform.android || TargetPlatform.iOS =>\n             UserExperience.mobile;\n        TargetPlatform.linux => UserExperience.tv;\n        _ => throw Exception('platform unsupported');"
    },
    {
      "title": "line 136: screen_scaffold.dart",
      "code": "switch (experience) {\n    UserExperience.tv => TvNavBar(...),\n    UserExperience.mobile => MobileNavBar(...),\n    UserExperience.web => ...\n}"
    }
  ]
}
