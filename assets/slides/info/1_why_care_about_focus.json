{
  "title": "Why care about Focus?",
  "subtitle": "The key to building apps that work everywhere.",
  "slideType": "LEFT_TEXT_RIGHT_CODE",
  "leftBullets": [
    "It's the **cursor for your keyboard**, telling your app which widget is active and ready for input.",
    " ",
    "**Build for Everyone**: ",
    "Proper focus management is non-negotiable for accessibility, making apps usable with screen readers and assistive tech.",
    " ",
    "**Power Up Desktop & Web**:",
    "Go beyond the mouse with intuitive tab-based navigation and powerful keyboard shortcuts.",
    " ",
    "**Conquer the 10-Foot Experience**:",
    "On TV, focus isn't just a featureâ€”it's the **entire user interface**."
  ],
  "codeSamples": [
    {
      "title": "\"rightImagePath\": \"assets/images/multi_device.png\"",
      "code": "import 'package:flutter/foundation.dart' show kIsWeb;\n\n// A simple check. In a real app, this could be more robust,\n// checking for specific TV operating systems.\nbool get isTv => kIsWeb; // For this example, we'll treat web as TV\n\nvoid main() {\n  runApp(const MyApp());\n}\n\nclass MyApp extends StatelessWidget {\n  const MyApp({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      // Conditionally load the correct top-level UI\n      home: isTv ? const TvScaffold() : const MobileScaffold(),\n    );\n  }\n}"
    }
  ]
}
