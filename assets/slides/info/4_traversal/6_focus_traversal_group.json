{
  "title": "Grouping for Traversal",
  "subtitle": "`FocusTraversalGroup` - area of custom navigation rules",
  "slideType": "LEFT_TEXT_RIGHT_CODE",
  "leftBullets": [
    {
      "title": "The First Step",
      "description": "`FocusTraversalGroup` is a widget that groups a set of focusable descendants together."
    },
    {
      "title": "Defining Boundaries",
      "description": "Its primary job is to mark a boundary. Any traversal policy applied to it will only affect the widgets inside the group."
    },
    {
      "title": "Requires a Policy",
      "description": "On its own, this widget doesn't change the traversal order. It must be paired with a `FocusTraversalPolicy`."
    },
    {
      "title": "The Container",
      "description": "Think of it as the container for your custom navigation logic. Put widgets inside, and define rules."
    }
  ],
  "codeSamples": [
    {
      "title": "line 53: tv_nav_bar.dart",
      "code": "FocusTraversalGroup(\n    policy: TvNavBarTraversalPolicy(navBarNodes: navBarNodes),\n    child: Column(\n      mainAxisAlignment: MainAxisAlignment.center,\n      children: [\n        _TvNavBarButton.home(\n            isSelected: selectedIndex == 0,\n            isFocused: isFocused,\n            focusNode: navBarNodes[0],\n            onPressed: () => itemSelected(0),\n        ),\n        _TvNavBarButton.info(\n            isSelected: selectedIndex == 1,\n            isFocused: isFocused,\n            focusNode: navBarNodes[1],\n            onPressed: () => itemSelected(1),\n        ),\n        ..."
    }
  ]
}
