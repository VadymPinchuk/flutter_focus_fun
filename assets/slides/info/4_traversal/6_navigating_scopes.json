{
  "title": "Jumping the Gap: Navigating Scopes",
  "subtitle": "Programmatically moving focus from one scope to another.",
  "slideType": "LEFT_TEXT_RIGHT_CODE",
  "leftBullets": [
    {
      "title": "The Trigger",
      "description": "The user is focused on the last item in the navigation rail and presses the down arrow. How do we move focus to the content area?"
    },
    {
      "title": "Accessing the Scope",
      "description": "We keep a reference to the `FocusScopeNode` for our content area (`_bodyFocusScopeNode`)."
    },
    {
      "title": "Making the Jump",
      "description": "We can then call methods directly on that node. `requestFocus()` will move focus to the scope, which then passes it to its last-focused child."
    },
    {
      "title": "Starting Fresh",
      "description": "Alternatively, `setFirstFocus()` explicitly moves focus to the very first focusable widget inside the target scope, which is often what you want when entering a new section."
    }
  ],
  "codeSamples": [
    {
      "title": "Moving Focus to the Content Area",
      "code": "// Inside the key handler for the navigation rail...\n\nif (event.logicalKey == LogicalKeyboardKey.arrowDown) {\n  // De-select the current nav item visually\n  setState(() => _selectedIndex = -1);\n\n  // Programmatically move focus to the body's scope\n  _bodyFocusScopeNode.requestFocus();\n\n  // Prevent the key event from bubbling up\n  return KeyEventResult.handled;\n}"
    }
  ]
}
